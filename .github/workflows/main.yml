name: CI/CD Pipeline

on:
  push:
    branches:
      - main  

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'  

      - name: Install dependencies
        run: npm install

      - name: Run unit tests
        run: npm test

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest

      # - name: Deploy to Development
      #   run: |
      #     ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_KEY }} ${{ secrets.DEV_USER }}@${{ secrets.DEV_SERVER }} "docker pull ${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest && docker stop my-app || true && docker rm my-app || true && docker run -d --name my-app -p 80:80 ${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest"

      # - name: Run automated tests
      #   run: |
      #     ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_KEY }} ${{ secrets.DEV_USER }}@${{ secrets.DEV_SERVER }} "cd ${{ secrets.DEV_DIR }} && npm run test:automated"

      # - name: Deploy to System Test
      #   if: success()
      #   run: |
      #     ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_KEY }} ${{ secrets.SYSTEST_USER }}@${{ secrets.SYSTEST_SERVER }} "docker pull ${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest && docker stop my-app || true && docker rm my-app || true && docker run -d --name my-app -p 80:80 ${{ secrets.DOCKERHUB_USERNAME }}/my-app:latest"
